{
	"id": "fda7202e85ba9a3fc084b4805b5ff024",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol": {
				"content": "pragma solidity >=0.5.16;\r\n\r\nimport './interfaces/IUniswapV2ERC20.sol';\r\nimport './libraries/SafeMath.sol';\r\n\r\ncontract UniswapV2ERC20 is IUniswapV2ERC20 {\r\n    using SafeMath for uint;\r\n\r\n    string public constant name = 'Hexx Token';\r\n    string public constant symbol = 'HEXX';\r\n    uint8 public constant decimals = 18;\r\n    uint  public totalSupply;\r\n    mapping(address => uint) public balanceOf;\r\n    mapping(address => mapping(address => uint)) public allowance;\r\n\r\n    bytes32 public DOMAIN_SEPARATOR;\r\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\r\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\r\n    mapping(address => uint) public nonces;\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    constructor() public {\r\n        uint chainId;\r\n        assembly {\r\n            chainId := chainid\r\n        }\r\n        DOMAIN_SEPARATOR = keccak256(\r\n            abi.encode(\r\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\r\n                keccak256(bytes(name)),\r\n                keccak256(bytes('1')),\r\n                chainId,\r\n                address(this)\r\n            )\r\n        );\r\n    }\r\n\r\n    function _mint(address to, uint value) internal {\r\n        totalSupply = totalSupply.add(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(address(0), to, value);\r\n    }\r\n\r\n    function _burn(address from, uint value) internal {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        totalSupply = totalSupply.sub(value);\r\n        emit Transfer(from, address(0), value);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint value) private {\r\n        allowance[owner][spender] = value;\r\n        emit Approval(owner, spender, value);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint value) private {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    function approve(address spender, uint value) external returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint value) external returns (bool) {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint value) external returns (bool) {\r\n        if (allowance[from][msg.sender] != uint(-1)) {\r\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\r\n        }\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r\n        require(deadline >= block.timestamp, 'UniswapV2: EXPIRED');\r\n        bytes32 digest = keccak256(\r\n            abi.encodePacked(\r\n                '\\x19\\x01',\r\n                DOMAIN_SEPARATOR,\r\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\r\n            )\r\n        );\r\n        address recoveredAddress = ecrecover(digest, v, r, s);\r\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE');\r\n        _approve(owner, spender, value);\r\n    }\r\n}\r\n"
			},
			"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol": {
				"content": "pragma solidity >=0.5.16;\r\n\r\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\r\n\r\nlibrary SafeMath {\r\n    function add(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x + y) >= x, 'ds-math-add-overflow');\r\n    }\r\n\r\n    function sub(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\r\n    }\r\n\r\n    function mul(uint x, uint y) internal pure returns (uint z) {\r\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\r\n    }\r\n}\r\n"
			},
			"smart contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol": {
				"content": "pragma solidity >=0.5.0;\r\n\r\ninterface IUniswapV2ERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns (string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n    function nonces(address owner) external view returns (uint);\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol": {
				"UniswapV2ERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":111:3526  contract UniswapV2ERC20 is IUniswapV2ERC20 {\r... */\n  mstore(0x40, 0x80)\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":941:1399  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":941:1399  constructor() public {\r... */\n  pop\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":973:985  uint chainId */\n  0x00\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1031:1038  chainid */\n  chainid\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1020:1038  chainId := chainid */\n  swap1\n  pop\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1131:1226  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1261:1265  name */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x4865787820546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1245:1267  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1296:1306  bytes('1') */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1286:1307  keccak256(bytes('1')) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1326:1333  chainId */\n  dup4\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1360:1364  this */\n  address\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1102:1380  abi.encode(\r... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1102:1380  abi.encode(\r... */\n  swap1\n  0x40\n  mstore\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1078:1391  keccak256(\r... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1059:1075  DOMAIN_SEPARATOR */\n  0x03\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1059:1391  DOMAIN_SEPARATOR = keccak256(\r... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":941:1399  constructor() public {\r... */\n  pop\n    /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":111:3526  contract UniswapV2ERC20 is IUniswapV2ERC20 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":111:3526  contract UniswapV2ERC20 is IUniswapV2ERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":111:3526  contract UniswapV2ERC20 is IUniswapV2ERC20 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":193:235  string public constant name = 'Hexx Token' */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":193:235  string public constant name = 'Hexx Token' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2238:2385  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2238:2385  function approve(address spender, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":329:353  uint  public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2540:2841  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2540:2841  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":621:729  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":287:322  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":478:509  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":360:401  mapping(address => uint) public balanceOf */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":360:401  mapping(address => uint) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":736:774  mapping(address => uint) public nonces */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":736:774  mapping(address => uint) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":242:280  string public constant symbol = 'HEXX' */\n    tag_12:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_46:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_46)\n    tag_48:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":242:280  string public constant symbol = 'HEXX' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_49\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_49:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2393:2532  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2393:2532  function transfer(address to, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2849:3523  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2849:3523  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":408:469  mapping(address => mapping(address => uint)) public allowance */\n    tag_15:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":408:469  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":193:235  string public constant name = 'Hexx Token' */\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x4865787820546f6b656e00000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2238:2385  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_26:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2302:2306  bool */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2319:2355  _approve(msg.sender, spender, value) */\n      tag_60\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2328:2338  msg.sender */\n      caller\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2340:2347  spender */\n      dup5\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2349:2354  value */\n      dup5\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2319:2327  _approve */\n      tag_61\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2319:2355  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_60:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2373:2377  true */\n      0x01\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2366:2377  return true */\n      swap1\n      pop\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2238:2385  function approve(address spender, uint value) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":329:353  uint  public totalSupply */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2540:2841  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_31:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2618:2622  bool */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2675:2677  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2639:2648  allowance */\n      0x02\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2639:2654  allowance[from] */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2649:2653  from */\n      dup7\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2639:2654  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2639:2666  allowance[from][msg.sender] */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2655:2665  msg.sender */\n      caller\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2639:2666  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2639:2678  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2635:2775  if (allowance[from][msg.sender] != uint(-1)) {\r... */\n      tag_63\n      jumpi\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2725:2763  allowance[from][msg.sender].sub(value) */\n      tag_64\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2757:2762  value */\n      dup3\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2725:2734  allowance */\n      0x02\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2725:2740  allowance[from] */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2735:2739  from */\n      dup8\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2725:2740  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2725:2752  allowance[from][msg.sender] */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2741:2751  msg.sender */\n      caller\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2725:2752  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2725:2756  allowance[from][msg.sender].sub */\n      tag_65\n      swap1\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2725:2763  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2695:2704  allowance */\n      0x02\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2695:2710  allowance[from] */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2705:2709  from */\n      dup7\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2695:2710  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2695:2722  allowance[from][msg.sender] */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2711:2721  msg.sender */\n      caller\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2695:2722  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2695:2763  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2635:2775  if (allowance[from][msg.sender] != uint(-1)) {\r... */\n    tag_63:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2785:2811  _transfer(from, to, value) */\n      tag_66\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2795:2799  from */\n      dup5\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2801:2803  to */\n      dup5\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2805:2810  value */\n      dup5\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2785:2794  _transfer */\n      tag_67\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2785:2811  _transfer(from, to, value) */\n      jump\t// in\n    tag_66:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2829:2833  true */\n      0x01\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2822:2833  return true */\n      swap1\n      pop\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2540:2841  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":621:729  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_33:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":663:729  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":621:729  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":287:322  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":320:322  18 */\n      0x12\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":287:322  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":478:509  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":360:401  mapping(address => uint) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":736:774  mapping(address => uint) public nonces */\n    tag_43:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":242:280  string public constant symbol = 'HEXX' */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x4845585800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2393:2532  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_52:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2453:2457  bool */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2470:2502  _transfer(msg.sender, to, value) */\n      tag_69\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2480:2490  msg.sender */\n      caller\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2492:2494  to */\n      dup5\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2496:2501  value */\n      dup5\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2470:2479  _transfer */\n      tag_67\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2470:2502  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_69:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2520:2524  true */\n      0x01\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2513:2524  return true */\n      swap1\n      pop\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2393:2532  function transfer(address to, uint value) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2849:3523  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n    tag_55:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2995:3010  block.timestamp */\n      timestamp\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2983:2991  deadline */\n      dup5\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2983:3010  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2975:3033  require(deadline >= block.timestamp, 'UniswapV2: EXPIRED') */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e697377617056323a20455850495245440000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3044:3058  bytes32 digest */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3149:3165  DOMAIN_SEPARATOR */\n      sload(0x03)\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":663:729  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3205:3220  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3222:3227  owner */\n      dup10\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3229:3236  spender */\n      dup10\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3238:3243  value */\n      dup10\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3245:3251  nonces */\n      0x04\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3245:3258  nonces[owner] */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3252:3257  owner */\n      dup15\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3245:3258  nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3245:3260  nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3262:3270  deadline */\n      dup11\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3194:3271  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3194:3271  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3184:3272  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3085:3287  abi.encodePacked(\r... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3085:3287  abi.encodePacked(\r... */\n      swap1\n      0x40\n      mstore\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3061:3298  keccak256(\r... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3044:3298  bytes32 digest = keccak256(\r... */\n      swap1\n      pop\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3309:3333  address recoveredAddress */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3336:3362  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3346:3352  digest */\n      dup3\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3354:3355  v */\n      dup7\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3357:3358  r */\n      dup7\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3360:3361  s */\n      dup7\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3336:3362  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3336:3362  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3309:3362  address recoveredAddress = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3409:3410  0 */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3381:3411  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3381:3397  recoveredAddress */\n      dup2\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3381:3411  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3381:3440  recoveredAddress != address(0) && recoveredAddress == owner */\n      dup1\n      iszero\n      tag_73\n      jumpi\n      pop\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3435:3440  owner */\n      dup9\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3415:3440  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3415:3431  recoveredAddress */\n      dup2\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3415:3440  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3381:3440  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_73:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3373:3473  require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE') */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x556e697377617056323a20494e56414c49445f5349474e415455524500000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3484:3515  _approve(owner, spender, value) */\n      tag_75\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3493:3498  owner */\n      dup10\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3500:3507  spender */\n      dup10\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3509:3514  value */\n      dup10\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3484:3492  _approve */\n      tag_61\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":3484:3515  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2849:3523  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":408:469  mapping(address => mapping(address => uint)) public allowance */\n    tag_58:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1833:2002  function _approve(address owner, address spender, uint value) private {\r... */\n    tag_61:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1942:1947  value */\n      dup1\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1914:1923  allowance */\n      0x02\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1914:1930  allowance[owner] */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1924:1929  owner */\n      dup6\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1914:1930  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1914:1939  allowance[owner][spender] */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1931:1938  spender */\n      dup5\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1914:1939  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1914:1947  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1979:1986  spender */\n      dup2\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1963:1994  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1972:1977  owner */\n      dup4\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1963:1994  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1988:1993  value */\n      dup4\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1963:1994  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":1833:2002  function _approve(address owner, address spender, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":297:426  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_65:\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":349:355  uint z */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":391:392  x */\n      dup3\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":385:386  y */\n      dup3\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":381:382  x */\n      dup5\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":381:386  x - y */\n      sub\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":377:386  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":376:392  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":368:418  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d7375622d756e646572666c6f770000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":297:426  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2010:2230  function _transfer(address from, address to, uint value) private {\r... */\n    tag_67:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2104:2130  balanceOf[from].sub(value) */\n      tag_80\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2124:2129  value */\n      dup2\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2104:2113  balanceOf */\n      0x01\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2104:2119  balanceOf[from] */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2114:2118  from */\n      dup7\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2104:2119  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2104:2123  balanceOf[from].sub */\n      tag_65\n      swap1\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2104:2130  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2086:2095  balanceOf */\n      0x01\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2086:2101  balanceOf[from] */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2096:2100  from */\n      dup6\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2086:2101  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2086:2130  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2157:2181  balanceOf[to].add(value) */\n      tag_81\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2175:2180  value */\n      dup2\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2157:2166  balanceOf */\n      0x01\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2157:2170  balanceOf[to] */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2167:2169  to */\n      dup6\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2157:2170  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2157:2174  balanceOf[to].add */\n      tag_82\n      swap1\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2157:2181  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2141:2150  balanceOf */\n      0x01\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2141:2154  balanceOf[to] */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2151:2153  to */\n      dup5\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2141:2154  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2141:2181  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2212:2214  to */\n      dup2\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2197:2222  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2206:2210  from */\n      dup4\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2197:2222  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2216:2221  value */\n      dup4\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2197:2222  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":2010:2230  function _transfer(address from, address to, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":161:289  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_82:\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":213:219  uint z */\n      0x00\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":255:256  x */\n      dup3\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":249:250  y */\n      dup3\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":245:246  x */\n      dup5\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":245:250  x + y */\n      add\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":241:250  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":240:256  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":232:281  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":161:289  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820a996c392425de8214e85b54e59dc487155e38053fcb91ad0388dadccaf22ccaf64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506000469050604051808061109060529139605201905060405180910390206040518060400160405280600a81526020017f4865787820546f6b656e00000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001955050505050506040516020818303038152906040528051906020012060038190555050610f618061012f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b61026961078c565b6040518082815260200191505060405180910390f35b6102876107b3565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6107b8565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107be565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d6565b6040518082815260200191505060405180910390f35b6103796107ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061083e565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b6040518082815260200191505060405180910390f35b6040518060400160405280600a81526020017f4865787820546f6b656e0000000000000000000000000000000000000000000081525081565b60006105b1338484610ba7565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610776576106f582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610781848484610d15565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600481526020017f484558580000000000000000000000000000000000000000000000000000000081525081565b6000610834338484610d15565b6001905092915050565b428410156108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f556e697377617056323a2045585049524544000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610a86573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610afa57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f556e697377617056323a20494e56414c49445f5349474e41545552450000000081525060200191505060405180910390fd5b610b77898989610ba7565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610d6781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dfc81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a72315820a996c392425de8214e85b54e59dc487155e38053fcb91ad0388dadccaf22ccaf64736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x1090 PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4865787820546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0xF61 DUP1 PUSH2 0x12F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4865787820546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x776 JUMPI PUSH2 0x6F5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4845585800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20455850495245440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB77 DUP10 DUP10 DUP10 PUSH2 0xBA7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xA9 SWAP7 0xC3 SWAP3 TIMESTAMP 0x5D 0xE8 0x21 0x4E DUP6 0xB5 0x4E MSIZE 0xDC 0x48 PUSH18 0x55E38053FCB91AD0388DADCCAF22CCAF6473 PUSH16 0x6C63430005100032454950373132446F PUSH14 0x61696E28737472696E67206E616D PUSH6 0x2C737472696E PUSH8 0x2076657273696F6E 0x2C PUSH22 0x696E7432353620636861696E49642C61646472657373 KECCAK256 PUSH23 0x6572696679696E67436F6E747261637429000000000000 ",
							"sourceMap": "111:3415:0:-;;;941:458;8:9:-1;5:2;;;30:1;27;20:12;5:2;941:458:0;973:12;1031:7;1020:18;;1131:95;;;;;;;;;;;;;;;;;;;1261:4;;;;;;;;;;;;;;;;;1245:22;;;;;;1296:10;;;;;;;;;;;;;;;;;1286:21;;;;;;1326:7;1360:4;1102:278;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1102:278:0;;;1078:313;;;;;;1059:16;:332;;;;941:458;111:3415;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b61026961078c565b6040518082815260200191505060405180910390f35b6102876107b3565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6107b8565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107be565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d6565b6040518082815260200191505060405180910390f35b6103796107ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061083e565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b6040518082815260200191505060405180910390f35b6040518060400160405280600a81526020017f4865787820546f6b656e0000000000000000000000000000000000000000000081525081565b60006105b1338484610ba7565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610776576106f582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610781848484610d15565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600481526020017f484558580000000000000000000000000000000000000000000000000000000081525081565b6000610834338484610d15565b6001905092915050565b428410156108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f556e697377617056323a2045585049524544000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610a86573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610afa57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f556e697377617056323a20494e56414c49445f5349474e41545552450000000081525060200191505060405180910390fd5b610b77898989610ba7565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610d6781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dfc81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a72315820a996c392425de8214e85b54e59dc487155e38053fcb91ad0388dadccaf22ccaf64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4865787820546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x776 JUMPI PUSH2 0x6F5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4845585800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20455850495245440000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB77 DUP10 DUP10 DUP10 PUSH2 0xBA7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xA9 SWAP7 0xC3 SWAP3 TIMESTAMP 0x5D 0xE8 0x21 0x4E DUP6 0xB5 0x4E MSIZE 0xDC 0x48 PUSH18 0x55E38053FCB91AD0388DADCCAF22CCAF6473 PUSH16 0x6C634300051000320000000000000000 ",
							"sourceMap": "111:3415:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;111:3415:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;193:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;193:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2238:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2238:147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;329:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2540:301;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2540:301:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;621:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;287:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;478:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;360:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;360:41:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;736:38;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;736:38:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;242;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;242:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2393:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2393:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2849:674;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2849:674:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;408:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;408:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;193:42;;;;;;;;;;;;;;;;;;;:::o;2238:147::-;2302:4;2319:36;2328:10;2340:7;2349:5;2319:8;:36::i;:::-;2373:4;2366:11;;2238:147;;;;:::o;329:24::-;;;;:::o;2540:301::-;2618:4;2675:2;2639:9;:15;2649:4;2639:15;;;;;;;;;;;;;;;:27;2655:10;2639:27;;;;;;;;;;;;;;;;:39;2635:140;;2725:38;2757:5;2725:9;:15;2735:4;2725:15;;;;;;;;;;;;;;;:27;2741:10;2725:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2695:9;:15;2705:4;2695:15;;;;;;;;;;;;;;;:27;2711:10;2695:27;;;;;;;;;;;;;;;:68;;;;2635:140;2785:26;2795:4;2801:2;2805:5;2785:9;:26::i;:::-;2829:4;2822:11;;2540:301;;;;;:::o;621:108::-;663:66;621:108;;;:::o;287:35::-;320:2;287:35;:::o;478:31::-;;;;:::o;360:41::-;;;;;;;;;;;;;;;;;:::o;736:38::-;;;;;;;;;;;;;;;;;:::o;242:::-;;;;;;;;;;;;;;;;;;;:::o;2393:139::-;2453:4;2470:32;2480:10;2492:2;2496:5;2470:9;:32::i;:::-;2520:4;2513:11;;2393:139;;;;:::o;2849:674::-;2995:15;2983:8;:27;;2975:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3044:14;3149:16;;663:66;3205:15;;3222:5;3229:7;3238:5;3245:6;:13;3252:5;3245:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;3262:8;3194:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3194:77:0;;;3184:88;;;;;;3085:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3085:202:0;;;3061:237;;;;;;3044:254;;3309:24;3336:26;3346:6;3354:1;3357;3360;3336:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3336:26:0;;;;;;;;3309:53;;3409:1;3381:30;;:16;:30;;;;:59;;;;;3435:5;3415:25;;:16;:25;;;3381:59;3373:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3484:31;3493:5;3500:7;3509:5;3484:8;:31::i;:::-;2849:674;;;;;;;;;:::o;408:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1833:169::-;1942:5;1914:9;:16;1924:5;1914:16;;;;;;;;;;;;;;;:25;1931:7;1914:25;;;;;;;;;;;;;;;:33;;;;1979:7;1963:31;;1972:5;1963:31;;;1988:5;1963:31;;;;;;;;;;;;;;;;;;1833:169;;;:::o;297:129:2:-;349:6;391:1;385;381;:5;377:9;;;376:16;;368:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:129;;;;:::o;2010:220:0:-;2104:26;2124:5;2104:9;:15;2114:4;2104:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;2086:9;:15;2096:4;2086:15;;;;;;;;;;;;;;;:44;;;;2157:24;2175:5;2157:9;:13;2167:2;2157:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;2141:9;:13;2151:2;2141:13;;;;;;;;;;;;;;;:40;;;;2212:2;2197:25;;2206:4;2197:25;;;2216:5;2197:25;;;;;;;;;;;;;;;;;;2010:220;;;:::o;161:128:2:-;213:6;255:1;249;245;:5;241:9;;;240:16;;232:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;161:128;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "787400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1028",
								"PERMIT_TYPEHASH()": "300",
								"allowance(address,address)": "1355",
								"approve(address,uint256)": "22431",
								"balanceOf(address)": "1214",
								"decimals()": "328",
								"name()": "infinite",
								"nonces(address)": "1236",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1050",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 3526,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 111,
									"end": 3526,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 111,
									"end": 3526,
									"name": "MSTORE"
								},
								{
									"begin": 941,
									"end": 1399,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 941,
									"end": 1399,
									"name": "POP"
								},
								{
									"begin": 973,
									"end": 985,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1031,
									"end": 1038,
									"name": "CHAINID"
								},
								{
									"begin": 1020,
									"end": 1038,
									"name": "SWAP1"
								},
								{
									"begin": 1020,
									"end": 1038,
									"name": "POP"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "DUP1"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "DUP1"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "SWAP2"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "CODECOPY"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "ADD"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "SWAP1"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "POP"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "MLOAD"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "DUP1"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "SWAP2"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "SUB"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "SWAP1"
								},
								{
									"begin": 1131,
									"end": 1226,
									"name": "KECCAK256"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "MLOAD"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "DUP1"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "ADD"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "MSTORE"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "DUP1"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "DUP2"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "MSTORE"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "ADD"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "4865787820546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "DUP2"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "MSTORE"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "POP"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "DUP1"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "MLOAD"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "SWAP1"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "ADD"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "KECCAK256"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "MLOAD"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "DUP1"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "ADD"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "MSTORE"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "DUP1"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "DUP2"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "MSTORE"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "ADD"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "DUP2"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "MSTORE"
								},
								{
									"begin": 1296,
									"end": 1306,
									"name": "POP"
								},
								{
									"begin": 1286,
									"end": 1307,
									"name": "DUP1"
								},
								{
									"begin": 1286,
									"end": 1307,
									"name": "MLOAD"
								},
								{
									"begin": 1286,
									"end": 1307,
									"name": "SWAP1"
								},
								{
									"begin": 1286,
									"end": 1307,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1286,
									"end": 1307,
									"name": "ADD"
								},
								{
									"begin": 1286,
									"end": 1307,
									"name": "KECCAK256"
								},
								{
									"begin": 1326,
									"end": 1333,
									"name": "DUP4"
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "ADDRESS"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "MLOAD"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "ADD"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "DUP1"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "DUP7"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "DUP2"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "MSTORE"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "ADD"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "DUP6"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "DUP2"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "MSTORE"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "ADD"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "DUP5"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "DUP2"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "MSTORE"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "ADD"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "DUP4"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "DUP2"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "MSTORE"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "ADD"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "DUP3"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "AND"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "AND"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "DUP2"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "MSTORE"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "ADD"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "SWAP6"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "POP"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "POP"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "POP"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "POP"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "POP"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "POP"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "SWAP1"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1102,
									"end": 1380,
									"name": "MSTORE"
								},
								{
									"begin": 1078,
									"end": 1391,
									"name": "DUP1"
								},
								{
									"begin": 1078,
									"end": 1391,
									"name": "MLOAD"
								},
								{
									"begin": 1078,
									"end": 1391,
									"name": "SWAP1"
								},
								{
									"begin": 1078,
									"end": 1391,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1078,
									"end": 1391,
									"name": "ADD"
								},
								{
									"begin": 1078,
									"end": 1391,
									"name": "KECCAK256"
								},
								{
									"begin": 1059,
									"end": 1075,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1059,
									"end": 1391,
									"name": "DUP2"
								},
								{
									"begin": 1059,
									"end": 1391,
									"name": "SWAP1"
								},
								{
									"begin": 1059,
									"end": 1391,
									"name": "SSTORE"
								},
								{
									"begin": 1059,
									"end": 1391,
									"name": "POP"
								},
								{
									"begin": 941,
									"end": 1399,
									"name": "POP"
								},
								{
									"begin": 111,
									"end": 3526,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 3526,
									"name": "DUP1"
								},
								{
									"begin": 111,
									"end": 3526,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 3526,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 111,
									"end": 3526,
									"name": "CODECOPY"
								},
								{
									"begin": 111,
									"end": 3526,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 111,
									"end": 3526,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820a996c392425de8214e85b54e59dc487155e38053fcb91ad0388dadccaf22ccaf64736f6c63430005100032",
									".code": [
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "MSTORE"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "POP"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "LT"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "SHR"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "GT"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "GT"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMP"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMP"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "EQ"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPI"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "JUMPDEST"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "DUP1"
										},
										{
											"begin": 111,
											"end": 3526,
											"name": "REVERT"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP3"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP3"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "AND"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "ISZERO"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "JUMPI"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP3"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP4"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "EXP"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "NOT"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "AND"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SWAP3"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "RETURN"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "JUMPDEST"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "AND"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP3"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP3"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "JUMPDEST"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "MLOAD"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "DUP3"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "ISZERO"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "ISZERO"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "ISZERO"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "ISZERO"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "MSTORE"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "MLOAD"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SUB"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "RETURN"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "MLOAD"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "DUP1"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "DUP3"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "DUP2"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "MSTORE"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "ADD"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP2"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "MLOAD"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "DUP1"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP2"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SUB"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP1"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "RETURN"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "JUMPDEST"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "DUP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "DUP2"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "ADD"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "DUP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "DUP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "AND"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "ADD"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP3"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP2"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "DUP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "AND"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "ADD"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP3"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP2"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "DUP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "ADD"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP3"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP2"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "POP"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "POP"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "POP"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "JUMPDEST"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "MLOAD"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "DUP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "DUP3"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "ISZERO"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "ISZERO"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "ISZERO"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "ISZERO"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "DUP2"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "MSTORE"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "ADD"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP2"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "POP"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "POP"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "MLOAD"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "DUP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP2"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SUB"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP1"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "RETURN"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "JUMPDEST"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "JUMPDEST"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "MLOAD"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "DUP1"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "DUP3"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "DUP2"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "MSTORE"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "ADD"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "SWAP2"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "POP"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "POP"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "MLOAD"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "DUP1"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "SWAP2"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "SUB"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "SWAP1"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "RETURN"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "JUMPDEST"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "JUMPDEST"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "MLOAD"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "DUP3"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "AND"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "AND"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "DUP2"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "MSTORE"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "ADD"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "SWAP2"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "POP"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "POP"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "MLOAD"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "SWAP2"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "SUB"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "SWAP1"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "RETURN"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "JUMPDEST"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "JUMPDEST"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "MLOAD"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "DUP1"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "DUP3"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "DUP2"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "MSTORE"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "ADD"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "SWAP2"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "POP"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "POP"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "MLOAD"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "DUP1"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "SWAP2"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "SUB"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "SWAP1"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "RETURN"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "JUMPDEST"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "DUP1"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "DUP2"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "ADD"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SWAP1"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "DUP1"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "DUP1"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "AND"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SWAP1"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "ADD"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SWAP1"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SWAP3"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SWAP2"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SWAP1"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "POP"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "POP"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "POP"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "JUMPDEST"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "MLOAD"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "DUP1"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "DUP3"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "DUP2"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "MSTORE"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "ADD"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SWAP2"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "POP"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "POP"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "MLOAD"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "DUP1"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SWAP2"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SUB"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SWAP1"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "RETURN"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "JUMPDEST"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "DUP1"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "DUP2"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "ADD"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "DUP1"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "DUP1"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "AND"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "ADD"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SWAP3"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SWAP2"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "JUMPDEST"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "MLOAD"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "DUP1"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "DUP3"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "DUP2"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "MSTORE"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "ADD"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SWAP2"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "MLOAD"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "DUP1"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SWAP2"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SUB"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "RETURN"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "JUMPDEST"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "JUMPDEST"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "MLOAD"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP3"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SUB"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP3"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP4"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "MLOAD"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SWAP2"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "MLOAD"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SWAP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SWAP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP4"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SWAP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SWAP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SWAP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "AND"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "ISZERO"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "JUMPI"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP3"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SUB"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "MLOAD"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP4"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SUB"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "EXP"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SUB"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "NOT"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "AND"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SWAP2"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "JUMPDEST"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SWAP3"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "MLOAD"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SWAP2"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SUB"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "SWAP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "RETURN"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "JUMPDEST"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "DUP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "DUP2"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "ADD"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "DUP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "DUP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "AND"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "ADD"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP3"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP2"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "DUP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "ADD"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP3"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP2"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "POP"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "POP"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "POP"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "JUMPDEST"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "MLOAD"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "DUP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "DUP3"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "ISZERO"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "ISZERO"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "ISZERO"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "ISZERO"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "DUP2"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "MSTORE"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "ADD"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP2"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "POP"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "POP"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "MLOAD"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "DUP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP2"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SUB"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP1"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "RETURN"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "JUMPDEST"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "AND"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP3"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "AND"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP3"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP3"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP3"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "AND"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP3"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP3"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP3"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "JUMPDEST"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "STOP"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "JUMPDEST"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "DUP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "DUP2"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "ADD"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "DUP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "DUP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "AND"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "ADD"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP3"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP2"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "DUP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "AND"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "ADD"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP3"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP2"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "POP"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "POP"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "POP"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "JUMPDEST"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "MLOAD"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "DUP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "DUP3"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "DUP2"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "MSTORE"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "ADD"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP2"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "POP"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "POP"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "MLOAD"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "DUP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP2"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SUB"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "RETURN"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "PUSH",
											"value": "4865787820546F6B656E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 235,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "JUMPDEST"
										},
										{
											"begin": 2302,
											"end": 2306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2355,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "CALLER"
										},
										{
											"begin": 2340,
											"end": 2347,
											"name": "DUP5"
										},
										{
											"begin": 2349,
											"end": 2354,
											"name": "DUP5"
										},
										{
											"begin": 2319,
											"end": 2327,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2319,
											"end": 2355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2319,
											"end": 2355,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2319,
											"end": 2355,
											"name": "JUMPDEST"
										},
										{
											"begin": 2373,
											"end": 2377,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2366,
											"end": 2377,
											"name": "SWAP1"
										},
										{
											"begin": 2366,
											"end": 2377,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP3"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2385,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SLOAD"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "DUP2"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "JUMPDEST"
										},
										{
											"begin": 2618,
											"end": 2622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2677,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2648,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "DUP7"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "AND"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "AND"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "DUP2"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "MSTORE"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "ADD"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "SWAP1"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "DUP2"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "MSTORE"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "ADD"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "KECCAK256"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2665,
											"name": "CALLER"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "AND"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "AND"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "DUP2"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "MSTORE"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "ADD"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SWAP1"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "DUP2"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "MSTORE"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "ADD"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "KECCAK256"
										},
										{
											"begin": 2639,
											"end": 2666,
											"name": "SLOAD"
										},
										{
											"begin": 2639,
											"end": 2678,
											"name": "EQ"
										},
										{
											"begin": 2635,
											"end": 2775,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2635,
											"end": 2775,
											"name": "JUMPI"
										},
										{
											"begin": 2725,
											"end": 2763,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2757,
											"end": 2762,
											"name": "DUP3"
										},
										{
											"begin": 2725,
											"end": 2734,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP8"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "AND"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "AND"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "DUP2"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "MSTORE"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "ADD"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "SWAP1"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "DUP2"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "MSTORE"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "ADD"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "KECCAK256"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2751,
											"name": "CALLER"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "AND"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "AND"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "DUP2"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "MSTORE"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "ADD"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "SWAP1"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "DUP2"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "MSTORE"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "ADD"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "KECCAK256"
										},
										{
											"begin": 2725,
											"end": 2752,
											"name": "SLOAD"
										},
										{
											"begin": 2725,
											"end": 2756,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2725,
											"end": 2756,
											"name": "SWAP1"
										},
										{
											"begin": 2725,
											"end": 2763,
											"name": "SWAP2"
										},
										{
											"begin": 2725,
											"end": 2763,
											"name": "SWAP1"
										},
										{
											"begin": 2725,
											"end": 2763,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2725,
											"end": 2763,
											"name": "AND"
										},
										{
											"begin": 2725,
											"end": 2763,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2725,
											"end": 2763,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2725,
											"end": 2763,
											"name": "JUMPDEST"
										},
										{
											"begin": 2695,
											"end": 2704,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2709,
											"name": "DUP7"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "AND"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "AND"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "DUP2"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "MSTORE"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "ADD"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "SWAP1"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "DUP2"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "MSTORE"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "ADD"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2710,
											"name": "KECCAK256"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "CALLER"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "AND"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "AND"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "DUP2"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "MSTORE"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "ADD"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "SWAP1"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "DUP2"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "MSTORE"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "ADD"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "KECCAK256"
										},
										{
											"begin": 2695,
											"end": 2763,
											"name": "DUP2"
										},
										{
											"begin": 2695,
											"end": 2763,
											"name": "SWAP1"
										},
										{
											"begin": 2695,
											"end": 2763,
											"name": "SSTORE"
										},
										{
											"begin": 2695,
											"end": 2763,
											"name": "POP"
										},
										{
											"begin": 2635,
											"end": 2775,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2635,
											"end": 2775,
											"name": "JUMPDEST"
										},
										{
											"begin": 2785,
											"end": 2811,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2795,
											"end": 2799,
											"name": "DUP5"
										},
										{
											"begin": 2801,
											"end": 2803,
											"name": "DUP5"
										},
										{
											"begin": 2805,
											"end": 2810,
											"name": "DUP5"
										},
										{
											"begin": 2785,
											"end": 2794,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2785,
											"end": 2811,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2785,
											"end": 2811,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2785,
											"end": 2811,
											"name": "JUMPDEST"
										},
										{
											"begin": 2829,
											"end": 2833,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "SWAP1"
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "POP"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP4"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "SWAP3"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "POP"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "POP"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "POP"
										},
										{
											"begin": 2540,
											"end": 2841,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "JUMPDEST"
										},
										{
											"begin": 663,
											"end": 729,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "SHL"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "DUP2"
										},
										{
											"begin": 621,
											"end": 729,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "JUMPDEST"
										},
										{
											"begin": 320,
											"end": 322,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "DUP2"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "JUMPDEST"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "SLOAD"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "DUP2"
										},
										{
											"begin": 478,
											"end": 509,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "JUMPDEST"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "MSTORE"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "DUP1"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "MSTORE"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "KECCAK256"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SWAP2"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "POP"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SWAP1"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "POP"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "SLOAD"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "DUP2"
										},
										{
											"begin": 360,
											"end": 401,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "JUMPDEST"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "MSTORE"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "DUP1"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "MSTORE"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "KECCAK256"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SWAP2"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "POP"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "SLOAD"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "DUP2"
										},
										{
											"begin": 736,
											"end": 774,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "JUMPDEST"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "MLOAD"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "PUSH",
											"value": "4845585800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 242,
											"end": 280,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2502,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2480,
											"end": 2490,
											"name": "CALLER"
										},
										{
											"begin": 2492,
											"end": 2494,
											"name": "DUP5"
										},
										{
											"begin": 2496,
											"end": 2501,
											"name": "DUP5"
										},
										{
											"begin": 2470,
											"end": 2479,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2470,
											"end": 2502,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2470,
											"end": 2502,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2470,
											"end": 2502,
											"name": "JUMPDEST"
										},
										{
											"begin": 2520,
											"end": 2524,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2513,
											"end": 2524,
											"name": "SWAP1"
										},
										{
											"begin": 2513,
											"end": 2524,
											"name": "POP"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP3"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "SWAP2"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "POP"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "POP"
										},
										{
											"begin": 2393,
											"end": 2532,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "JUMPDEST"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2983,
											"end": 2991,
											"name": "DUP5"
										},
										{
											"begin": 2983,
											"end": 3010,
											"name": "LT"
										},
										{
											"begin": 2983,
											"end": 3010,
											"name": "ISZERO"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "JUMPI"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "MLOAD"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "DUP2"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "MSTORE"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "ADD"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "DUP1"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "DUP1"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "ADD"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "DUP3"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "DUP2"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "SUB"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "DUP3"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "MSTORE"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "DUP2"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "MSTORE"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "ADD"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "DUP1"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "PUSH",
											"value": "556E697377617056323A20455850495245440000000000000000000000000000"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "DUP2"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "MSTORE"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "POP"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "ADD"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "SWAP2"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "POP"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "POP"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "MLOAD"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "DUP1"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "SWAP2"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "SUB"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "SWAP1"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "REVERT"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2975,
											"end": 3033,
											"name": "JUMPDEST"
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "SLOAD"
										},
										{
											"begin": 663,
											"end": 729,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "SHL"
										},
										{
											"begin": 3222,
											"end": 3227,
											"name": "DUP10"
										},
										{
											"begin": 3229,
											"end": 3236,
											"name": "DUP10"
										},
										{
											"begin": 3238,
											"end": 3243,
											"name": "DUP10"
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3257,
											"name": "DUP15"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "AND"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "AND"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "DUP2"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "MSTORE"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "ADD"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "SWAP1"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "DUP2"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "MSTORE"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "ADD"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "KECCAK256"
										},
										{
											"begin": 3245,
											"end": 3258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "DUP2"
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "SLOAD"
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "DUP1"
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "SWAP3"
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "SWAP2"
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "SWAP1"
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "ADD"
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "SWAP2"
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "SWAP1"
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "POP"
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "SSTORE"
										},
										{
											"begin": 3262,
											"end": 3270,
											"name": "DUP11"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "MLOAD"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "DUP1"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "DUP8"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "DUP2"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "MSTORE"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "DUP7"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "AND"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "AND"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "DUP2"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "MSTORE"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "DUP6"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "AND"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "AND"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "DUP2"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "MSTORE"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "DUP5"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "DUP2"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "MSTORE"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "DUP4"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "DUP2"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "MSTORE"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "DUP3"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "DUP2"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "MSTORE"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "SWAP7"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "SWAP1"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3194,
											"end": 3271,
											"name": "MSTORE"
										},
										{
											"begin": 3184,
											"end": 3272,
											"name": "DUP1"
										},
										{
											"begin": 3184,
											"end": 3272,
											"name": "MLOAD"
										},
										{
											"begin": 3184,
											"end": 3272,
											"name": "SWAP1"
										},
										{
											"begin": 3184,
											"end": 3272,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3184,
											"end": 3272,
											"name": "ADD"
										},
										{
											"begin": 3184,
											"end": 3272,
											"name": "KECCAK256"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "MLOAD"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "DUP1"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "DUP1"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "DUP2"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "MSTORE"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "DUP4"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "DUP2"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "MSTORE"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "DUP3"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "DUP2"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "MSTORE"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "SWAP3"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "POP"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "SWAP1"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3287,
											"name": "MSTORE"
										},
										{
											"begin": 3061,
											"end": 3298,
											"name": "DUP1"
										},
										{
											"begin": 3061,
											"end": 3298,
											"name": "MLOAD"
										},
										{
											"begin": 3061,
											"end": 3298,
											"name": "SWAP1"
										},
										{
											"begin": 3061,
											"end": 3298,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3061,
											"end": 3298,
											"name": "ADD"
										},
										{
											"begin": 3061,
											"end": 3298,
											"name": "KECCAK256"
										},
										{
											"begin": 3044,
											"end": 3298,
											"name": "SWAP1"
										},
										{
											"begin": 3044,
											"end": 3298,
											"name": "POP"
										},
										{
											"begin": 3309,
											"end": 3333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3346,
											"end": 3352,
											"name": "DUP3"
										},
										{
											"begin": 3354,
											"end": 3355,
											"name": "DUP7"
										},
										{
											"begin": 3357,
											"end": 3358,
											"name": "DUP7"
										},
										{
											"begin": 3360,
											"end": 3361,
											"name": "DUP7"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "MLOAD"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "MSTORE"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "ADD"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "MSTORE"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "MLOAD"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP1"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP6"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "MSTORE"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "ADD"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP5"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "AND"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "AND"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "MSTORE"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "ADD"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP4"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "MSTORE"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "ADD"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP3"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "MSTORE"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "ADD"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "SWAP5"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "POP"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "POP"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "POP"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "POP"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "POP"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "MLOAD"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "SUB"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "SWAP1"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP1"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP5"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "SUB"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "SWAP1"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "DUP6"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "GAS"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "STATICCALL"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "POP"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "POP"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "POP"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "MLOAD"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "SUB"
										},
										{
											"begin": 3336,
											"end": 3362,
											"name": "MLOAD"
										},
										{
											"begin": 3309,
											"end": 3362,
											"name": "SWAP1"
										},
										{
											"begin": 3309,
											"end": 3362,
											"name": "POP"
										},
										{
											"begin": 3409,
											"end": 3410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3411,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3381,
											"end": 3411,
											"name": "AND"
										},
										{
											"begin": 3381,
											"end": 3397,
											"name": "DUP2"
										},
										{
											"begin": 3381,
											"end": 3411,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3381,
											"end": 3411,
											"name": "AND"
										},
										{
											"begin": 3381,
											"end": 3411,
											"name": "EQ"
										},
										{
											"begin": 3381,
											"end": 3411,
											"name": "ISZERO"
										},
										{
											"begin": 3381,
											"end": 3440,
											"name": "DUP1"
										},
										{
											"begin": 3381,
											"end": 3440,
											"name": "ISZERO"
										},
										{
											"begin": 3381,
											"end": 3440,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3381,
											"end": 3440,
											"name": "JUMPI"
										},
										{
											"begin": 3381,
											"end": 3440,
											"name": "POP"
										},
										{
											"begin": 3435,
											"end": 3440,
											"name": "DUP9"
										},
										{
											"begin": 3415,
											"end": 3440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3415,
											"end": 3440,
											"name": "AND"
										},
										{
											"begin": 3415,
											"end": 3431,
											"name": "DUP2"
										},
										{
											"begin": 3415,
											"end": 3440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3415,
											"end": 3440,
											"name": "AND"
										},
										{
											"begin": 3415,
											"end": 3440,
											"name": "EQ"
										},
										{
											"begin": 3381,
											"end": 3440,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3381,
											"end": 3440,
											"name": "JUMPDEST"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "JUMPI"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "MLOAD"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "DUP2"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "MSTORE"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "ADD"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "DUP1"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "DUP1"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "ADD"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "DUP3"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "DUP2"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "SUB"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "DUP3"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "MSTORE"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "DUP2"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "MSTORE"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "ADD"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "DUP1"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "PUSH",
											"value": "556E697377617056323A20494E56414C49445F5349474E415455524500000000"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "DUP2"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "MSTORE"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "POP"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "ADD"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "SWAP2"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "POP"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "POP"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "MLOAD"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "DUP1"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "SWAP2"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "SUB"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "SWAP1"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "REVERT"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3373,
											"end": 3473,
											"name": "JUMPDEST"
										},
										{
											"begin": 3484,
											"end": 3515,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3493,
											"end": 3498,
											"name": "DUP10"
										},
										{
											"begin": 3500,
											"end": 3507,
											"name": "DUP10"
										},
										{
											"begin": 3509,
											"end": 3514,
											"name": "DUP10"
										},
										{
											"begin": 3484,
											"end": 3492,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3484,
											"end": 3515,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3484,
											"end": 3515,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3484,
											"end": 3515,
											"name": "JUMPDEST"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 2849,
											"end": 3523,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "JUMPDEST"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "MSTORE"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "DUP2"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "MSTORE"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "KECCAK256"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "MSTORE"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "DUP1"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "MSTORE"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "KECCAK256"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP2"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "POP"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SWAP2"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "POP"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "POP"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "SLOAD"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "DUP2"
										},
										{
											"begin": 408,
											"end": 469,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1833,
											"end": 2002,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1833,
											"end": 2002,
											"name": "JUMPDEST"
										},
										{
											"begin": 1942,
											"end": 1947,
											"name": "DUP1"
										},
										{
											"begin": 1914,
											"end": 1923,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "DUP6"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "AND"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "AND"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "DUP2"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "MSTORE"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "ADD"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "SWAP1"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "DUP2"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "MSTORE"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "ADD"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1930,
											"name": "KECCAK256"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 1938,
											"name": "DUP5"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "AND"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "AND"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "DUP2"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "MSTORE"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "ADD"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "SWAP1"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "DUP2"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "MSTORE"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "ADD"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1939,
											"name": "KECCAK256"
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "DUP2"
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "SWAP1"
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "SSTORE"
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "POP"
										},
										{
											"begin": 1979,
											"end": 1986,
											"name": "DUP2"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "AND"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "DUP4"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "AND"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "DUP4"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "MLOAD"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "DUP1"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "DUP3"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "DUP2"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "MSTORE"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "ADD"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "SWAP2"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "POP"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "POP"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "MLOAD"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "DUP1"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "SWAP2"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "SUB"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "SWAP1"
										},
										{
											"begin": 1963,
											"end": 1994,
											"name": "LOG3"
										},
										{
											"begin": 1833,
											"end": 2002,
											"name": "POP"
										},
										{
											"begin": 1833,
											"end": 2002,
											"name": "POP"
										},
										{
											"begin": 1833,
											"end": 2002,
											"name": "POP"
										},
										{
											"begin": 1833,
											"end": 2002,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 426,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 297,
											"end": 426,
											"name": "JUMPDEST"
										},
										{
											"begin": 349,
											"end": 355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 391,
											"end": 392,
											"name": "DUP3"
										},
										{
											"begin": 385,
											"end": 386,
											"name": "DUP3"
										},
										{
											"begin": 381,
											"end": 382,
											"name": "DUP5"
										},
										{
											"begin": 381,
											"end": 386,
											"name": "SUB"
										},
										{
											"begin": 377,
											"end": 386,
											"name": "SWAP2"
										},
										{
											"begin": 377,
											"end": 386,
											"name": "POP"
										},
										{
											"begin": 377,
											"end": 386,
											"name": "DUP2"
										},
										{
											"begin": 376,
											"end": 392,
											"name": "GT"
										},
										{
											"begin": 376,
											"end": 392,
											"name": "ISZERO"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "JUMPI"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP3"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F770000000000000000000000"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP2"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MSTORE"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "ADD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "POP"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "MLOAD"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DUP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SWAP2"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SUB"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "SWAP1"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "REVERT"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 368,
											"end": 418,
											"name": "JUMPDEST"
										},
										{
											"begin": 297,
											"end": 426,
											"name": "SWAP3"
										},
										{
											"begin": 297,
											"end": 426,
											"name": "SWAP2"
										},
										{
											"begin": 297,
											"end": 426,
											"name": "POP"
										},
										{
											"begin": 297,
											"end": 426,
											"name": "POP"
										},
										{
											"begin": 297,
											"end": 426,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2010,
											"end": 2230,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2010,
											"end": 2230,
											"name": "JUMPDEST"
										},
										{
											"begin": 2104,
											"end": 2130,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2124,
											"end": 2129,
											"name": "DUP2"
										},
										{
											"begin": 2104,
											"end": 2113,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2118,
											"name": "DUP7"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "AND"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "AND"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "DUP2"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "MSTORE"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "ADD"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "SWAP1"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "DUP2"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "MSTORE"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "ADD"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "KECCAK256"
										},
										{
											"begin": 2104,
											"end": 2119,
											"name": "SLOAD"
										},
										{
											"begin": 2104,
											"end": 2123,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2104,
											"end": 2123,
											"name": "SWAP1"
										},
										{
											"begin": 2104,
											"end": 2130,
											"name": "SWAP2"
										},
										{
											"begin": 2104,
											"end": 2130,
											"name": "SWAP1"
										},
										{
											"begin": 2104,
											"end": 2130,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2104,
											"end": 2130,
											"name": "AND"
										},
										{
											"begin": 2104,
											"end": 2130,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2104,
											"end": 2130,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2104,
											"end": 2130,
											"name": "JUMPDEST"
										},
										{
											"begin": 2086,
											"end": 2095,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2100,
											"name": "DUP6"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "AND"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "AND"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "DUP2"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "MSTORE"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "ADD"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "SWAP1"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "DUP2"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "MSTORE"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "ADD"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "KECCAK256"
										},
										{
											"begin": 2086,
											"end": 2130,
											"name": "DUP2"
										},
										{
											"begin": 2086,
											"end": 2130,
											"name": "SWAP1"
										},
										{
											"begin": 2086,
											"end": 2130,
											"name": "SSTORE"
										},
										{
											"begin": 2086,
											"end": 2130,
											"name": "POP"
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "DUP2"
										},
										{
											"begin": 2157,
											"end": 2166,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2169,
											"name": "DUP6"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "AND"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "AND"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "DUP2"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "MSTORE"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "ADD"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "SWAP1"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "DUP2"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "MSTORE"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "ADD"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "KECCAK256"
										},
										{
											"begin": 2157,
											"end": 2170,
											"name": "SLOAD"
										},
										{
											"begin": 2157,
											"end": 2174,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2157,
											"end": 2174,
											"name": "SWAP1"
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "SWAP2"
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "SWAP1"
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "AND"
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "JUMPDEST"
										},
										{
											"begin": 2141,
											"end": 2150,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2153,
											"name": "DUP5"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "AND"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "AND"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "DUP2"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "MSTORE"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "ADD"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "SWAP1"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "DUP2"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "MSTORE"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "ADD"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "KECCAK256"
										},
										{
											"begin": 2141,
											"end": 2181,
											"name": "DUP2"
										},
										{
											"begin": 2141,
											"end": 2181,
											"name": "SWAP1"
										},
										{
											"begin": 2141,
											"end": 2181,
											"name": "SSTORE"
										},
										{
											"begin": 2141,
											"end": 2181,
											"name": "POP"
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "DUP2"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "AND"
										},
										{
											"begin": 2206,
											"end": 2210,
											"name": "DUP4"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "AND"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2216,
											"end": 2221,
											"name": "DUP4"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "MLOAD"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "DUP1"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "DUP3"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "DUP2"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "MSTORE"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "ADD"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "SWAP2"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "POP"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "POP"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "MLOAD"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "DUP1"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "SWAP2"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "SUB"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "SWAP1"
										},
										{
											"begin": 2197,
											"end": 2222,
											"name": "LOG3"
										},
										{
											"begin": 2010,
											"end": 2230,
											"name": "POP"
										},
										{
											"begin": 2010,
											"end": 2230,
											"name": "POP"
										},
										{
											"begin": 2010,
											"end": 2230,
											"name": "POP"
										},
										{
											"begin": 2010,
											"end": 2230,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 161,
											"end": 289,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 161,
											"end": 289,
											"name": "JUMPDEST"
										},
										{
											"begin": 213,
											"end": 219,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 255,
											"end": 256,
											"name": "DUP3"
										},
										{
											"begin": 249,
											"end": 250,
											"name": "DUP3"
										},
										{
											"begin": 245,
											"end": 246,
											"name": "DUP5"
										},
										{
											"begin": 245,
											"end": 250,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 250,
											"name": "SWAP2"
										},
										{
											"begin": 241,
											"end": 250,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 250,
											"name": "DUP2"
										},
										{
											"begin": 240,
											"end": 256,
											"name": "LT"
										},
										{
											"begin": 240,
											"end": 256,
											"name": "ISZERO"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "JUMPI"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MLOAD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP3"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SUB"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP3"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SWAP2"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "MLOAD"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SWAP2"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SUB"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "REVERT"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 232,
											"end": 281,
											"name": "JUMPDEST"
										},
										{
											"begin": 161,
											"end": 289,
											"name": "SWAP3"
										},
										{
											"begin": 161,
											"end": 289,
											"name": "SWAP2"
										},
										{
											"begin": 161,
											"end": 289,
											"name": "POP"
										},
										{
											"begin": 161,
											"end": 289,
											"name": "POP"
										},
										{
											"begin": 161,
											"end": 289,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":\"UniswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol\":{\"keccak256\":\"0x3ecabc5082ba6f85900632dd59355261914d967bbd81bc619019239ec1fa3a25\",\"urls\":[\"bzz-raw://42f35cd8a2f98cb8cc0d1e53614d67b364d467962e58c05ab7875c44bcc68df8\",\"dweb:/ipfs/QmNUt3PadjYUzHxPNaCfb1fdvsuY5PsNK96tDkVWQnvGq7\"]},\"smart contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0xda3ed72159ac8321b9ee8b67893e0d42ac6f8180b8e1112e8724a9093a409541\",\"urls\":[\"bzz-raw://db4c5c04309ae947a14a464f22f37b76225749248eff9a6a9e184f314531533e\",\"dweb:/ipfs/QmaNHx4uQ79xhQ3SgCK4NodQR11oc4DRtkPGLqGSpB7jei\"]},\"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xfe46a92953b0ebf82fc2a9f21f995beb60e845aaa7223bfb37711a3b41d6dc11\",\"urls\":[\"bzz-raw://06272423f21f7b375d85d3d4c0cb280a278b1f7f312af2bf002278e16bf48432\",\"dweb:/ipfs/QmXGGm8wvt8pZu2ob1HFk8qLTRATasvomjkaYBvcH3qU57\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 38,
								"contract": "smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"smart contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol": {
				"IUniswapV2ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"smart contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol\":\"IUniswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0xda3ed72159ac8321b9ee8b67893e0d42ac6f8180b8e1112e8724a9093a409541\",\"urls\":[\"bzz-raw://db4c5c04309ae947a14a464f22f37b76225749248eff9a6a9e184f314531533e\",\"dweb:/ipfs/QmaNHx4uQ79xhQ3SgCK4NodQR11oc4DRtkPGLqGSpB7jei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":137:579  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":137:579  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820b10456a54ad5afdeaa96f5fd269b3b76719090d9b19c3ed195f6ff8612305e5164736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b10456a54ad5afdeaa96f5fd269b3b76719090d9b19c3ed195f6ff8612305e5164736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB1 DIV JUMP 0xA5 0x4A 0xD5 0xAF 0xDE 0xAA SWAP7 CREATE2 REVERT 0x26 SWAP12 EXTCODESIZE PUSH23 0x719090D9B19C3ED195F6FF8612305E5164736F6C634300 SDIV LT STOP ORIGIN ",
							"sourceMap": "137:442:2:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b10456a54ad5afdeaa96f5fd269b3b76719090d9b19c3ed195f6ff8612305e5164736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB1 DIV JUMP 0xA5 0x4A 0xD5 0xAF 0xDE 0xAA SWAP7 CREATE2 REVERT 0x26 SWAP12 EXTCODESIZE PUSH23 0x719090D9B19C3ED195F6FF8612305E5164736F6C634300 SDIV LT STOP ORIGIN ",
							"sourceMap": "137:442:2:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 137,
									"end": 579,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 579,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820b10456a54ad5afdeaa96f5fd269b3b76719090d9b19c3ed195f6ff8612305e5164736f6c63430005100032",
									".code": [
										{
											"begin": 137,
											"end": 579,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "ADDRESS"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "EQ"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "DUP1"
										},
										{
											"begin": 137,
											"end": 579,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xfe46a92953b0ebf82fc2a9f21f995beb60e845aaa7223bfb37711a3b41d6dc11\",\"urls\":[\"bzz-raw://06272423f21f7b375d85d3d4c0cb280a278b1f7f312af2bf002278e16bf48432\",\"dweb:/ipfs/QmXGGm8wvt8pZu2ob1HFk8qLTRATasvomjkaYBvcH3qU57\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol": {
				"ast": {
					"absolutePath": "smart contracts/v2-core-master/contracts/UniswapV2ERC20.sol",
					"exportedSymbols": {
						"UniswapV2ERC20": [
							384
						]
					},
					"id": 385,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:0"
						},
						{
							"absolutePath": "smart contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol",
							"file": "./interfaces/IUniswapV2ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 503,
							"src": "29:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "smart contracts/v2-core-master/contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 578,
							"src": "73:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "IUniswapV2ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 502,
										"src": "138:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2ERC20_$502",
											"typeString": "contract IUniswapV2ERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "138:15:0"
								}
							],
							"contractDependencies": [
								502
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 384,
							"linearizedBaseContracts": [
								384,
								502
							],
							"name": "UniswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 577,
										"src": "167:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$577",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "161:24:0",
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "180:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 11,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "193:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "193:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4865787820546f6b656e",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:12:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c752079a5b46b20bb2d74ca8b56c765da37034eb5f30423e0c854747bc9a645d",
											"typeString": "literal_string \"Hexx Token\""
										},
										"value": "Hexx Token"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "242:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "242:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "48455858",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "274:6:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b49e052f4a4daacaf421dc112ebbf4004949d12b031f523925144a540eb6449c",
											"typeString": "literal_string \"HEXX\""
										},
										"value": "HEXX"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "287:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "287:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "320:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "329:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "329:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "360:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "368:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "360:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "379:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "408:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "416:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "408:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "435:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "427:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "446:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 31,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "478:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 30,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "478:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 34,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "621:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 32,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "621:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "663:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "736:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "744:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "736:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 36,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "755:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 46,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "798:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "821:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "846:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "846:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "797:60:0"
									},
									"src": "783:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 54,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "879:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "901:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "921:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "921:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "878:54:0"
									},
									"src": "864:69:0"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "962:437:0",
										"statements": [
											{
												"assignments": [
													58
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "973:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 57,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "973:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 59,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "973:12:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 58,
															"isOffset": false,
															"isSlot": false,
															"src": "1020:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 60,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "996:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 61,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1059:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1141:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 65,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "1131:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1131:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 70,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1261:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 69,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1255:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1255:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 68,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "1245:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1245:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 75,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1302:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 74,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1296:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1296:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 73,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "1286:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1286:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 78,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1326:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 80,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 610,
																				"src": "1360:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_UniswapV2ERC20_$384",
																					"typeString": "contract UniswapV2ERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_UniswapV2ERC20_$384",
																					"typeString": "contract UniswapV2ERC20"
																				}
																			],
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1352:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1352:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 63,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "1102:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1102:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1102:278:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 62,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "1078:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1078:313:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1059:332:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1059:332:0"
											}
										]
									},
									"documentation": null,
									"id": 87,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:0:0"
									},
									"scope": 384,
									"src": "941:458:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1455:153:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1466:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 97,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1496:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 95,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1480:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 526,
															"src": "1480:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1480:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1466:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1466:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 101,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1513:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 103,
														"indexExpression": {
															"argumentTypes": null,
															"id": 102,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1523:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1513:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 108,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1547:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 104,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1529:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 106,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 105,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1539:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1529:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 526,
															"src": "1529:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1529:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1513:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1513:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1586:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1578:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1578:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1590:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 117,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1594:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 112,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1569:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1569:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "EmitStatement",
												"src": "1564:36:0"
											}
										]
									},
									"documentation": null,
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1422:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1422:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1434:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1421:24:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:0:0"
									},
									"scope": 384,
									"src": "1407:201:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1666:159:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 128,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1677:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 130,
														"indexExpression": {
															"argumentTypes": null,
															"id": 129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1687:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1677:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 135,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1715:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1695:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 133,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 132,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1705:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1695:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "1695:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1695:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1677:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1677:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 139,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1732:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 142,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1762:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 140,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1746:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "1746:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1746:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1732:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "1732:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 147,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1793:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1799:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1799:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 151,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1811:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 146,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1784:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1784:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "EmitStatement",
												"src": "1779:38:0"
											}
										]
									},
									"documentation": null,
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1631:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1645:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1645:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1630:26:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1666:0:0"
									},
									"scope": 384,
									"src": "1616:209:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1903:99:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1914:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 167,
															"indexExpression": {
																"argumentTypes": null,
																"id": 165,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1924:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1914:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 168,
														"indexExpression": {
															"argumentTypes": null,
															"id": 166,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1914:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 169,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1942:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1914:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1914:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 173,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1972:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 174,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1979:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1988:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 172,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															46
														],
														"referencedDeclaration": 46,
														"src": "1963:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1958:36:0"
											}
										]
									},
									"documentation": null,
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1851:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1866:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1883:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1883:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1850:44:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:0:0"
									},
									"scope": 384,
									"src": "1833:169:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "2075:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 188,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2086:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 190,
														"indexExpression": {
															"argumentTypes": null,
															"id": 189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2096:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2086:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 195,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2124:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 191,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2104:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 193,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 192,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "2114:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2104:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "2104:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2104:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2086:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 199,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2141:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 201,
														"indexExpression": {
															"argumentTypes": null,
															"id": 200,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2151:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2141:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 206,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2175:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 202,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2157:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 204,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 203,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2167:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2157:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 526,
															"src": "2157:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2157:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2141:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2141:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 211,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2206:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 212,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2212:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 213,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2216:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 210,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "2197:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2197:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "2192:30:0"
											}
										]
									},
									"documentation": null,
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2029:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2043:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2055:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2055:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2028:38:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2075:0:0"
									},
									"scope": 384,
									"src": "2010:220:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2308:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 227,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "2328:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2328:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 229,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2340:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 230,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2349:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2319:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2319:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2319:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2373:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 225,
												"id": 234,
												"nodeType": "Return",
												"src": "2366:11:0"
											}
										]
									},
									"documentation": null,
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2255:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2255:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2272:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2272:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2254:29:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2302:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2302:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2301:6:0"
									},
									"scope": 384,
									"src": "2238:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 447,
									"visibility": "external"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2459:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 246,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "2480:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2480:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 248,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "2492:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 249,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2496:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 245,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2470:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2470:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "2470:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2520:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 244,
												"id": 253,
												"nodeType": "Return",
												"src": "2513:11:0"
											}
										]
									},
									"documentation": null,
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2411:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2423:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2423:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2410:24:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2453:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2453:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2452:6:0"
									},
									"scope": 384,
									"src": "2393:139:0",
									"stateMutability": "nonpayable",
									"superFunction": 456,
									"visibility": "external"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "2624:217:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 266,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2639:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 268,
															"indexExpression": {
																"argumentTypes": null,
																"id": 267,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "2649:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2639:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 271,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "2655:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2655:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2639:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2675:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2676:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2670:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2670:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2639:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 295,
												"nodeType": "IfStatement",
												"src": "2635:140:0",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "2680:95:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 277,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "2695:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 281,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 278,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "2705:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2695:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 282,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 279,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 592,
																			"src": "2711:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2711:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2695:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 290,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "2757:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 283,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "2725:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 285,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 284,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 257,
																					"src": "2735:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2725:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 288,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 286,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 592,
																					"src": "2741:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2741:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2725:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 548,
																		"src": "2725:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2725:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2695:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 293,
															"nodeType": "ExpressionStatement",
															"src": "2695:68:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 297,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2795:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 298,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2801:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 299,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2805:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 296,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2785:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "2785:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2829:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 303,
												"nodeType": "Return",
												"src": "2822:11:0"
											}
										]
									},
									"documentation": null,
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2562:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2576:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2588:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2588:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2561:38:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2618:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2618:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2617:6:0"
									},
									"scope": 384,
									"src": "2540:301:0",
									"stateMutability": "nonpayable",
									"superFunction": 467,
									"visibility": "external"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "2964:559:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 323,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "2983:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 324,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "2995:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2995:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2983:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a2045585049524544",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3012:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															},
															"value": "UniswapV2: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															}
														],
														"id": 322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2975:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "2975:58:0"
											},
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 382,
														"src": "3044:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 330,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3120:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 336,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "3149:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 340,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 34,
																					"src": "3205:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 341,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 307,
																					"src": "3222:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 342,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "3229:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 343,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "3238:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 347,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3245:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 344,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 38,
																							"src": "3245:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 346,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 345,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 307,
																							"src": "3252:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3245:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 348,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 313,
																					"src": "3262:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 338,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 579,
																					"src": "3194:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3194:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3194:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 337,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "3184:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3184:88:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 333,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "3085:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3085:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3085:202:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 332,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "3061:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3061:237:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3044:254:0"
											},
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 382,
														"src": "3309:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 354,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3309:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 357,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3346:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 358,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "3354:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 359,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "3357:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 360,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "3360:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 356,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "3336:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3336:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3309:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 364,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3381:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3409:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3401:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3401:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3381:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 369,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3415:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 370,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "3435:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3415:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3381:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e56414c49445f5349474e4154555245",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3442:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															},
															"value": "UniswapV2: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "3373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3373:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "3373:100:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3493:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "3500:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 379,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "3509:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3484:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3484:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "3484:31:0"
											}
										]
									},
									"documentation": null,
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2865:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2880:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2897:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2897:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2909:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2909:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2924:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 314,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2924:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2933:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 316,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2944:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 318,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2864:90:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2964:0:0"
									},
									"scope": 384,
									"src": "2849:674:0",
									"stateMutability": "nonpayable",
									"superFunction": 501,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "111:3415:0"
						}
					],
					"src": "0:3528:0"
				},
				"id": 0
			},
			"smart contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol": {
				"ast": {
					"absolutePath": "smart contracts/v2-core-master/contracts/interfaces/IUniswapV2ERC20.sol",
					"exportedSymbols": {
						"IUniswapV2ERC20": [
							502
						]
					},
					"id": 503,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 502,
							"linearizedBaseContracts": [
								502
							],
							"name": "IUniswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 394,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "76:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "99:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "99:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "124:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "124:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "75:60:1"
									},
									"src": "61:75:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 402,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "157:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "157:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "179:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "199:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "199:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "156:54:1"
									},
									"src": "142:69:1"
								},
								{
									"body": null,
									"documentation": null,
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:2:1"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "258:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "258:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "257:15:1"
									},
									"scope": 502,
									"src": "219:54:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:1"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "320:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "320:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "319:15:1"
									},
									"scope": 502,
									"src": "279:56:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:2:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "384:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 414,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "384:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "383:7:1"
									},
									"scope": 502,
									"src": "341:50:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "443:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "443:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "442:6:1"
									},
									"scope": 502,
									"src": "397:52:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "474:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "473:15:1"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "512:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "512:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "511:6:1"
									},
									"scope": 502,
									"src": "455:63:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "543:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "558:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "558:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "542:32:1"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "598:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "598:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "597:6:1"
									},
									"scope": 502,
									"src": "524:80:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "629:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "646:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "628:29:1"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "676:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "676:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "675:6:1"
									},
									"scope": 502,
									"src": "612:70:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "706:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "718:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "718:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:24:1"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "748:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 453,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "748:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "747:6:1"
									},
									"scope": 502,
									"src": "688:66:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "782:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "796:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "808:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "781:38:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "838:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "837:6:1"
									},
									"scope": 502,
									"src": "760:84:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "877:2:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "903:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 469,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "902:9:1"
									},
									"scope": 502,
									"src": "852:60:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "942:2:1"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "968:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 474,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "967:9:1"
									},
									"scope": 502,
									"src": "918:59:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "998:15:1"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1037:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1037:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1036:6:1"
									},
									"scope": 502,
									"src": "983:60:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1067:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1082:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1099:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1099:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1111:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1111:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1126:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 493,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1126:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 495,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 497,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:90:1"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1165:0:1"
									},
									"scope": 502,
									"src": "1051:115:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 503,
							"src": "28:1141:1"
						}
					],
					"src": "0:1171:1"
				},
				"id": 1
			},
			"smart contracts/v2-core-master/contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "smart contracts/v2-core-master/contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							577
						]
					},
					"id": 578,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 504,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 577,
							"linearizedBaseContracts": [
								577
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "221:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 514,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 511,
																			"src": "241:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 515,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "245:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 516,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "249:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "245:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "241:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 519,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "240:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 520,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "255:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "240:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "258:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "232:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "232:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "232:49:2"
											}
										]
									},
									"documentation": null,
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "174:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "174:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "182:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "182:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "173:16:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "213:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "213:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "212:8:2"
									},
									"scope": 577,
									"src": "161:128:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "357:69:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 536,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "377:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 537,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "381:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 538,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "385:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "381:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "377:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 541,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "376:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 542,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "391:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "376:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "394:23:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "368:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "368:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "368:50:2"
											}
										]
									},
									"documentation": null,
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "310:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "310:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "318:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "318:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "309:16:2"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "349:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "349:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "348:8:2"
									},
									"scope": 577,
									"src": "297:129:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "494:82:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 558,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "513:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "518:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "513:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 561,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 555,
																					"src": "524:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 564,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 562,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 550,
																						"src": "528:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 563,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 552,
																						"src": "532:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "528:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "524:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 566,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "523:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 567,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 552,
																		"src": "537:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "523:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 569,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "542:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "523:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "513:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "545:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "505:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "505:63:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "505:63:2"
											}
										]
									},
									"documentation": null,
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "447:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "447:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "455:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "455:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "446:16:2"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "486:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "486:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "485:8:2"
									},
									"scope": 577,
									"src": "434:142:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 578,
							"src": "137:442:2"
						}
					],
					"src": "0:581:2"
				},
				"id": 2
			}
		}
	}
}